name: setup-backend
description: Sets up runner environment for backend code


inputs:
  python-version:
    description: Python version to use. Example '3.8'
    default: '3.8'
    required: false
    type: string
  pipenv-version:
    description: Pipenv version to use. Example '2022.1.8'
    default: '2022.1.8'
    required: false
    type: string


runs:
  using: composite
  steps:
    - uses: actions/setup-python@v2
      id: setup-python
      with:
        python-version: ${{ inputs.python-version }}

    - uses: turskislab/.github/.github/actions/set-env-var@v3
      with:
        name: my_python
        value: python${{ inputs.python-version }}

    - uses: turskislab/.github/.github/actions/set-env-var@v3
      with:
        name: my_cache_prefix
        value: ${{ runner.os }}-${{ env.my_python }}

    - uses: actions/cache@v2
      id: cache-pipenv
      with:
        path: |
          ${{ env.pythonLocation }}/bin/pipenv
          ${{ env.pythonLocation }}/lib/${{ env.my_python }}/site-packages/pipenv
        key: ${{ env.my_cache_prefix }}-pipenv-${{ inputs.pipenv-version }}
        restore-keys: ${{ env.my_cache_prefix }}-pipenv-

    - name: conditionally install pipenv
      shell: bash
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      working-directory: ./backend
      run: pip install pipenv=="${{ inputs.pipenv-version }}"

    - uses: actions/cache@v2
      id: cache-lockfile
      with:
        path: ./backend/.venv
        key: ${{ env.my_cache_prefix }}-lockfile-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: ${{ env.my_cache_prefix }}-lockfile-

    - name: conditionally install dependencies
      shell: bash
      if: steps.cache-lockfile.outputs.cache-hit != 'true'
      working-directory: ./backend
      run: pipenv install --dev --deploy
      env:
        PIPENV_VENV_IN_PROJECT: 1
